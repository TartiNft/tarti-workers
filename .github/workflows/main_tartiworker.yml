name: Build and Deploy Docker Services

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the source code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Docker CLI
    - name: Set up Docker CLI
      uses: docker/setup-buildx-action@v2

    # Step 3: Build and save tarti-nft-watcher
    - name: Build tarti-nft-watcher
      run: |
        docker build -t tarti-nft-watcher:latest -f tarti-nft-watcher/Dockerfile .
        docker save tarti-nft-watcher:latest -o ${{ github.workspace }}/tarti-nft-watcher.tar

    # Step 3.5: Verify tar tarti-nft-watcher
    - name: Verify tarball exists
      run: ls -l tarti-nft-watcher.tar
              
    # Step 4: Build and save tartist-nft-worker
    - name: Build tartist-nft-worker
      run: |
        docker build -t tartist-nft-worker:latest -f tartist-nft-worker/Dockerfile .
        docker save tartist-nft-worker:latest -o ${{ github.workspace }}/tartist-nft-worker.tar

    # Step 4.5: Verify tar tartist-nft-worker
    - name: Verify tarball exists
      run: ls -l tartist-nft-worker.tar

      # Step 5: Build and save tarti-nft-worker
    - name: Build tarti-nft-worker
      run: |
        docker build -t tarti-nft-worker:latest -f tarti-nft-worker/Dockerfile .
        docker save tarti-nft-worker:latest -o ${{ github.workspace }}/tarti-nft-worker.tar

    # Step 5.5: Verify tar tarti-nft-worker
    - name: Verify tarball exists
      run: ls -l tarti-nft-worker.tar

    # Step 6: Transfer all images to the remote server
    - name: Verify all tarballs exists
      run: ls -l *.tar

    - name: Test SSH Connection
      run: |
        mkdir -p ~/.ssh
        mkdir -p "$RUNNER_TEMP"
        echo "${{ secrets.DOCKER_SSH_PRIVATE_KEY }}" > $RUNNER_TEMP/github-actions-key
        chmod 600 $RUNNER_TEMP/github-actions-key
        ssh -i $RUNNER_TEMP/github-actions-key github-actions@${{ secrets.DOCKER_SSH_HOST }} hostname
        
    - name: Transfer Docker images to remote server
      uses: appleboy/scp-action@v0.1.2
      with:
        host: ${{ secrets.DOCKER_SSH_HOST }}
        username: ${{ secrets.DOCKER_SSH_USER }}
        key_path: $RUNNER_TEMP/github-actions-key
        source: ${{ github.workspace }}/*.tar
        target: /tmp/

    # Step 7: SSH into the remote server and deploy
    - name: Deploy Docker images on remote server
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.DOCKER_SSH_HOST }}
        username: ${{ secrets.DOCKER_SSH_USER }}
        key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
        script: |
          # Load Docker images
          docker load < /tmp/tarti-nft-watcher.tar
          docker load < /tmp/tartist-nft-worker.tar
          docker load < /tmp/tarti-nft-worker.tar

          # Stop and remove old containers
          # docker stop tarti-nft-watcher tartist-nft-worker tarti-nft-worker || true
          # docker rm tarti-nft-watcher tartist-nft-worker tarti-nft-worker || true

          # Run new containers
          # docker run -d --name tarti-nft-watcher tarti-nft-watcher:latest
          # docker run -d --name tartist-nft-worker tartist-nft-worker:latest
          # docker run -d --name tarti-nft-worker tarti-nft-worker:latest

          # Clean up tarballs
          rm /tmp/tarti-nft-watcher.tar /tmp/tartist-nft-worker.tar /tmp/tarti-nft-worker.tar
