name: Build and Deploy Docker Services

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Testnet
  
    steps:
    # Step 1: Checkout the source code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Docker CLI
    - name: Set up Docker CLI
      uses: docker/setup-buildx-action@v2

    - name: Copy secrets to env
      run: |
          echo "ETH_CLIENT_URL=${{ secrets.ETH_CLIENT_URL }}" >>${{ github.workspace }}/shared/.env
          echo "CONTRACT_OWNER_WALLET_ADDRESS=${{ secrets.CONTRACT_OWNER_WALLET_ADDRESS }}" >> ${{ github.workspace }}/shared/.env
          echo "CONTRACT_OWNER_WALLET_PK=${{ secrets.CONTRACT_OWNER_WALLET_PK }}" >> ${{ github.workspace }}/shared/.env
          echo "TRAIT_HTTP_URI=${{ secrets.TRAIT_HTTP_URI }}" >> ${{ github.workspace }}/shared/.env
          echo "PINATA_API_JWT=${{ secrets.PINATA_API_JWT }}" >> ${{ github.workspace }}/shared/.env
          echo "IPFS_GATEWAY=${{ secrets.IPFS_GATEWAY }}" >> ${{ github.workspace }}/shared/.env
          echo "NEW_TARTIST_METADATA_CID=${{ secrets.NEW_TARTIST_METADATA_CID }}" >> ${{ github.workspace }}/shared/.env
          echo "NEW_TARTI_METADATA_CID=${{ secrets.NEW_TARTI_METADATA_CID }}" >> ${{ github.workspace }}/shared/.env
          echo "CREATING_TARTIST_METADATA_CID=${{ secrets.CREATING_TARTIST_METADATA_CID }}" >> ${{ github.workspace }}/shared/.env
          echo "CREATING_TARTI_METADATA_CID=${{ secrets.CREATING_TARTI_METADATA_CID }}" >> ${{ github.workspace }}/shared/.env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> ${{ github.workspace }}/shared/.env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> ${{ github.workspace }}/shared/.env
          echo "TARTI_QUEUE_NAME=${{ secrets.TARTI_QUEUE_NAME }}" >> ${{ github.workspace }}/shared/.env
          echo "TARTIST_QUEUE_NAME=${{ secrets.TARTIST_QUEUE_NAME }}" >> ${{ github.workspace }}/shared/.env
          chmod 600 ${{ github.workspace }}/shared/.env

    # Step 3: Build and save tarti-nft-watcher
    - name: Build tarti-nft-watcher
      run: |
        docker build -t tarti-nft-watcher-dev:latest -f tarti-nft-watcher/Dockerfile .
        docker save tarti-nft-watcher-dev:latest -o ${{ github.workspace }}/tarti-nft-watcher-dev.tar
           
    # Step 4: Build and save tartist-nft-worker
    - name: Build tartist-nft-worker
      run: |
        docker build -t tartist-nft-worker-dev:latest -f tartist-nft-worker/Dockerfile .
        docker save tartist-nft-worker-dev:latest -o ${{ github.workspace }}/tartist-nft-worker-dev.tar

    # Step 5: Build and save tarti-nft-worker
    - name: Build tarti-nft-worker
      run: |
        docker build -t tarti-nft-worker-dev:latest -f tarti-nft-worker/Dockerfile .
        docker save tarti-nft-worker-dev:latest -o ${{ github.workspace }}/tarti-nft-worker-dev.tar

    # Step 5: Build and save add-traits-to-tartist
    - name: Build add-traits-to-tartist
      run: |
        docker build -t add-traits-to-tartist-dev:latest -f add-traits-to-tartist/Dockerfile .
        docker save add-traits-to-tartist-dev:latest -o ${{ github.workspace }}/add-traits-to-tartist-dev.tar

    - name: Transfer and Deploy Docker Images on Remote Server
      run: |
        # Setup SSH and Known Hosts
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.DOCKER_SSH_HOST }} >> ~/.ssh/known_hosts
        echo "${{ secrets.DOCKER_SSH_PRIVATE_KEY }}" > github-actions-key
        chmod 600 github-actions-key

        # Verify Tarballs Exist
        ls -l ${{ github.workspace }}/*.tar

        # Transfer Tarballs to Remote Server
        scp -i github-actions-key ${{ github.workspace }}/*.tar github-actions@${{ secrets.DOCKER_SSH_HOST }}:/tmp/

        # SSH into Remote Server to Deploy
        ssh -i github-actions-key github-actions@${{ secrets.DOCKER_SSH_HOST }} << 'EOF'
          # Load Docker Images
          docker load < /tmp/tarti-nft-watcher-dev.tar
          docker load < /tmp/tartist-nft-worker-dev.tar
          docker load < /tmp/tarti-nft-worker-dev.tar
          docker load < /tmp/add-traits-to-tartist-dev.tar

          # Stop and Remove Old Containers
          docker wait tarti-nft-watcher-dev || true
          docker-compose -f /home/github-actions/tarti-infra/docker-compose.yml stop tarti-nft-watcher-dev || true

          docker wait tartist-nft-worker-dev || true
          docker-compose -f /home/github-actions/tarti-infra/docker-compose.yml stop tartist-nft-worker-dev || true

          docker wait tarti-nft-worker-dev || true
          docker-compose -f /home/github-actions/tarti-infra/docker-compose.yml stop tarti-nft-worker-dev || true

          docker wait add-traits-to-tartist-dev || true
          docker-compose -f /home/github-actions/tarti-infra/docker-compose.yml stop add-traits-to-tartist-dev || true

          docker rm tarti-nft-watcher-dev tartist-nft-worker-dev tarti-nft-worker-dev add-traits-to-tartist-dev || true

          # Run New Containers
          # docker run -d --name tarti-nft-watcher-dev tarti-nft-watcher-dev:latest
          # docker run -d --name tartist-nft-worker-dev tartist-nft-worker-dev:latest
          # docker run -d --name tarti-nft-worker-dev tarti-nft-worker-dev:latest
          # docker run -d --name add-traits-to-tartist-dev add-traits-to-tartist-dev:latest

          # Clean Up Tarballs
          rm /tmp/tarti-nft-watcher-dev.tar /tmp/tartist-nft-worker-dev.tar /tmp/tarti-nft-worker-dev.tar /tmp/add-traits-to-tartist-dev.tar
        EOF

        rm github-actions-key
        rm ${{ github.workspace }}/shared/.env
